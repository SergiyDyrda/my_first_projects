1	Перечислите методы класса Object
2	Зачем нужны методы equals & hashCode?
3	Что будет, если переопределить equals, но не переопределить hashCode?
4	Зачем нужны методы wait, notify, notifyAll?
5	Как правильно клонировать объект?
6	Зачем нужен метод finalize() и как он работает?
7	В чем отличие final, finally, finalize?
8	Что такое try-with-resources?
9	Чем отличаются методы wait(1000) и sleep(1000)?
10	В чем отличие i++ и ++i ?


1	Как правильно сравнить две строки в Java?
2	Как правильно сравнить две строки в Java игнорируя регистр букв?
3	Как отсортировать список строк в алфавитном порядке?
4	В какой кодировке хранятся строки в Java?
5	Как преобразовать строку в кодировку Windows-1251?
6	Как разбить строку на отдельные слова?
7	Как развернуть строку задом наперед?
8	Что происходит, когда мы пишем "A"+"b"+"C"?
9	Что такое mutable и immutable типы?
10	Что дает типу String то, что его сделали immutable?

1	Какие бывают внутренние классы?
2	Во что компилируется анонимный внутренний класс?
3	Зачем использовать ключевое слово final при создании анонимных классов?
4	Как правильно создать объект внутреннего класса?
5	Как правильно создать объект вложенного класса?
6	Можно ли создавать статические методы/переменные во внутреннем классе?
7	Назовите три любых внутренних класса?
8	Как внутренние классы решают проблему множественного наследования в Java?
9	Чем отличаются анонимные классы, созданные на основе интерфейса и на основе класса?
10	Можно ли создать анонимный статический вложенный класс?

1	Во что компилируются анонимные внутренние классы?
2	Можно ли наследовать внутренние классы?
3	Можно ли наследовать анонимные внутренние классы?
4	Можно ли переопределять внутренние классы?
5	Какие ограничения есть у локальных классов?
6	Может ли анонимный внутренний класс содержать статические методы?
7	Можно ли создать объект внутреннего класса, если у внешнего класса только private конструктор?
8	Можно ли объявлять внутренние классы private?
9	Можно ли объявлять анонимные внутренние классы private?
10	Сколько у класса максимально может быть внутренних классов?

1	Назовите все состояния объекта Thread?
2	В какие состояния может перейти нить, при входе в блок synchronized?
3	В какое состояние перейдет нить, при вызове метода wait()?
4	В какое состояние перейдет нить, при вызове метода wait(500)?
5	В какое состояние перейдет нить, при вызове метода notify()?
6	В какое состояние перейдет нить, при вызове метода notifyAll()?
7	Три нити в блоке synchronized вызвали wait() у объекта-мютекса.
В какое состояние перейдут эти нити, если четвертая нить вызовет notifyAll()?
8	Чем отличается join(500) от wait(500)?
9	Чем отличается wait(500) от sleep(500)?
10	В какое состояние перейдет нить при вызове метода yield()?

1	Как пользоваться интерфейсом Comparable?
2	Как пользоваться интерфейсом Comparator?
3	Какие методы есть у класса Collections?
4	Какие методы есть у класса Arrays?
5	Как называется сортировка, которая используется при вызове Collections.sort()?
6	Что такое канкаренси?
7	Какие классы из «канкаренси» ты знаешь?
8	Как устроен класс ConcurrentHashMap?
9	Что такое класс Lock?
10	Что такое итератор?
11	Что такое mutex?
12	Что такое монитор?

1	Что такое дедлок?
2	Какие вы знаете стратегии, предотвращающие появление дедлоков?
3	Могут ли возникнуть дедлоки при использовании методов wait-notify?
4	Что чаще используется: notify или notifyAll?
5	Метод wait рекомендуется использовать с конструкциями if или while?
6	Что происходит после вызова метода notifyAll?
7	Какие выгоды получает объект, если он immutable?
8	Что такое «thread-safe»?
9	Что такое "happens-before"?
10	Что такое JMM?
11	Какое исключение вылетит, если вызвать wait не в блоке synchronized?

1	Какие приоритеты нитей бывают?
2	Можно ли остановить нить, снизив ее приоритет до 0?
3	Зачем нужен класс ThreadGroup?
4	В какой группе нитей состоит main-thread?
5	Что такое паттерн ThreadPool
6	Зачем нужен класс ThreadPoolExecutor?
7	Сколько способов создать нить вы знаете? (Thread, Runnable, Callable<T>)
8	Для чего используется класс Future?
9	В чем преимущества Callable над Runnable?
10	Можно ли отменить выполнение задачи, если использовать класс Future?

1	Что такое autoboxing?
2	Зачем используется autoboxing?
3	Альтернативы autoboxing?
4	Типы-обертки для примитивных типов mutable или immutable?
5	Как примитивные типы приводятся к непримитивным аналогам?
6	Как непримитивные типы приводятся к примитивным?
7	Как сравниваются примитивные и непримитивные типы?
8	Всегда ли создается новый объект при операции autoboxing?
9	Как работает кэширование при операции autoboxing?
10	Для каких типов и/или значений работает кэширование?

1	Что такое NaN?
2	Как получить бесконечность в Java?
3	Как проверить, что в результате вычисления получилась бесконечность?
4	Что такое битовая маска?
5	Где применяют битовые маски?
6	Как установить бит в единицу в битовой маске?
7	Как установить бит в ноль в битовой маске?
8	Как получить значение определенного бита в битовой маске?
9	Что такое ленивое вычисление выражения?
10	Чем отличается использование && и & для типа boolean?

1	Может ли объект File соответствовать файлу, которого еще нет?
2	Как преобразовать объект File к типу Path?
3	Зачем нужен класс Files?
4	Какие классы для архивации вы знаете?
5	Как добавить директорию в архив?
6	Зачем нужны Properties?
7	В каком виде хранятся данные в файле .properties?
8	Можно ли изменять данные в объекте Properties после загрузки их из файла?
9	Зачем нужен класс FileReader?
10	Зачем нужен класс FileWriter?

1	Зачем нужен RandomAccessFile?
2	Что будет если файл, откуда читает RandomAccessFile, не существует?
3	Что будет если файл, куда пишет RandomAccessFile, не существует?
4	Зачем нужен класс StringReader?
5	Зачем нужен класс StringWriter?
6	Зачем нужен класс ByteArrayStream?
7	Зачем нужен класс PrintStream? Назовите места, где он используется?
8	Зачем нужен DynamicProxy?
9	Как работает RMI?
10	Объекты каких типов можно передавать по RMI?

1 	Что такое сборка мусора?
2 	Когда вызывается метод finalize?
3 	Что произойдет, если в методе finalize возникнет исключение?
4 	Что такое SoftReference?
5 	Что такое WeakReference?
6 	Что такое PhantomReference?
7 	Как работает WeakHashMap? Где он используется?
8 	Зачем нужно передавать очередь в конструктор PhantomReference?
9 	Зачем нужен логгер?
10 	Какие настройки логгера вы знаете? 

1	Какие системы контроля версий вы знаете?
2	Чем отличаются SVN и Git?
3	Что такое GitHub? У вас есть проекты на GitHub?
4	Зачем нужны системы контроля версий?
5	Что такое generic? Как они реализованы в Java?
6	Что такое стирание типов?
7	Расскажите про extends и super в Generic'ах?
8	Что такое wildcard?
9	Как использовать wildcard?
10	В чем отличие ArrayList и ArrayList<?>

1	Что такое MVC?
2	Что такое DAO и DTO?
3	Что такое POJO?
4	Что такое Entity?
5	Какие коллекции-списки вы знаете?
6	Какие коллекции-множества вы знаете?
7	Что такое map, чем он отличается от «словаря»?
8	Что такое Queue и Dequeue?
9	Какие классы, реализующие интерфейс Queeue вы знаете?
10	Что такое дерево?

1	Что такое паттерны проектирования?
2	Какие паттерны проектирования вы знаете?
3	Расскажите про паттерн Singleton? Как сделать его потокобезопасным?
4	Расскажите про паттерн Factory
5	Расскажите про паттерн AbstractFactory
6	Расскажите про паттерн Adaper, его отличия от Wrapper?
7	Расскажите про паттерн Proxy
8	Что такое итератор? Какие интерфейсы, связанные с итератором, вы знаете?
9	Зачем нужен класс Arrays?
10	Зачем нужен класс Collections?

1	Что такое Agile?
2	Что такое Scrum?
3	Какие роли Scrum вы знаете?
4	Что такое спринт? Расскажите с подробностями
5	Кто такие QA?
6	Кто такой product owner?
7	Расскажите об иерархии исключений
8	Что делать если JVM выкинула Error?
9	Какие нововведения в области исключений из Java 7 вы знаете?
10	Зачем нужны аннотации? Как ими пользоваться?

1	Что такое IP-адрес?
2	В чем отличие host и domain?
3	Какие методы в HTTP вы знаете
4	Чем отличаются методы GET, POST и HEAD?
5	Что такое REST?
6	Зачем нужен класс Calendar в Java?
7	Как преобразовать дату в Java к нужному формату?
8	В чем отличие URI и URL?
9	Что такое сокеты?
10	Отличие классов Socket и URL?
